

/* Import normalize */
@import "normalize";

/* Import CSS3 Mixins */
@import "compass/css3";


/* Remove units and return val */
// http://stackoverflow.com/questions/10756928/getting-only-x-or-y-position-from-sprite-in-compass
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

/* Fleximage mixin */
@mixin flexImage( $containerWidth, $elemWidth, $elemHeight, $fileName, $fullSpriteName  ) {
	$spriteWidth: strip-units( image-width(sprite-path($fullSpriteName)) );
	$spriteHeight: strip-units( image-height(sprite-path($fullSpriteName)) );
	$offsetX: abs( strip-units( nth(sprite-position($fullSpriteName, $fileName), 1) ) );
	$offsetY: abs( strip-units( nth(sprite-position($fullSpriteName, $fileName), 2) ) );
	$bgWidth: percentage( $spriteWidth / $elemWidth );
	$bgHeight: percentage( $spriteHeight / $elemHeight );
	$bgOffsetX: null;
	$bgOffsetY: null;

	@if $offsetX == 0 {
		$bgOffsetX: 0;
	} @else {
		$bgOffsetX: percentage( $offsetX / ( $spriteWidth - $elemWidth ) );
	}
	
	@if $offsetY == 0 {
		$bgOffsetY: 0;
	} @else {
		$bgOffsetY: percentage( $offsetY / ( $spriteHeight - $elemHeight ) );
	}

	width: percentage( $elemWidth / $containerWidth );
	padding-top: percentage( $elemHeight / $containerWidth );
	background-size: $bgWidth $bgHeight;
	background-position: $bgOffsetX $bgOffsetY;
}


// Configure the sprite
$ui-icons-spacing: 2px;
@import "ui-icons/*.png";
@include all-ui-icons-sprites;


* {
	@include box-sizing( border-box );
}

body {
	background: #F2F1F1;
}

.removeText {
	display: block;
	overflow: hidden;
	text-indent: 100%;
	white-space: nowrap;
	font-size: 0;
	line-height: 0;
}

.legacyClearfix:after {
	content: "\0020";
	display: block;
	height: 0;
	clear: both;
	overflow: hidden;
	visibility: hidden;
}


#wrapper {
	max-width: 43.75em; // 700px
	margin: 0 auto;
}

.intro {
	padding: 10% 5% 5%;

	h1 {
		text-transform: uppercase;
		font-size: 1.375em;
		color: rgb(49, 49, 49);
	}

	h3 {
		font-size: 0.875em;
		color: rgb(49, 49, 49);
	}

	p {
		font-size: 0.9375em;
		margin: 1.666666667em 0 0;
	}
}


.col {
	// width: 35.142857143%;	// 246 / 700
	padding: 0 2.142857143%; // 15 / 700
	text-align: center;

	h2 {
		text-transform: uppercase;
		font-size: 1.125em;
		margin-bottom: 1.666666667em;
		color: rgb(231, 123, 124);
	}
}

.col.one {
	width: 25.714285714%; /// 180 / 700
	float: left;
	position: relative;
}

.col.two {
	width: 57.1428571%; // 400 / 700
	float: right; 
}


.sprite {
	@extend .removeText;
	@extend .ui-icons-sprite;
	$spritePath: sprite-path( $ui-icons-sprites );
	$width: strip-units( image-width( $spritePath ) );
	$height: strip-units( image-height( $spritePath ) );
	width: $width;
	height: $height;
	margin: 0 auto;
	@include flexImage( 400, $width, $height, arrow, $ui-icons-sprites );
	// width: image-width( $spritePath );
	// height: image-height( $spritePath );
}

// @include flexImage( $containerWidth, $elemWidth, $elemHeight, filename, $fullSpriteName );

.elem {
	@extend .removeText;
	float: left;
	margin-right: 18%;
	margin-bottom: 20px;
}

$c: 150;
.uploading {
	@extend .ui-icons-uploading;
	@include flexImage( $c, 48, 32, uploading, $ui-icons-sprites );
}
.camera {
	@extend .ui-icons-camera;
	@include flexImage( $c, 48, 36, camera, $ui-icons-sprites );
}
.envelope {
	@extend .ui-icons-envelope;
	@include flexImage( $c, 48, 32, envelope, $ui-icons-sprites );
}
.storm {
	@extend .ui-icons-storm;
	@include flexImage( $c, 48, 44, storm, $ui-icons-sprites );
}





